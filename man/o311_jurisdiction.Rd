% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jurisdiction.R
\name{o311_jurisdiction}
\alias{o311_jurisdiction}
\title{Mount a jurisdiction}
\usage{
o311_jurisdiction(endpoint = NULL, jurisdiction = NULL)
}
\arguments{
\item{endpoint}{\code{[character]}

Name of an endpoint that runs an open311 API. This is usually a
city, but can be any provider of an open311 API.}

\item{jurisdiction}{\code{[character]}

ID of a jurisdiction that is served by an open311 API. A jurisdiction
ID is usually the root URL of the jurisdiction website, e.g.
\code{"sfgov.org"} for San Francisco.}
}
\value{
A list containing the most important information on a given
jurisdiction.
}
\description{
Attach an open311 jurisdiction to the active session. A jurisdiction
describes a city or a jurisdiction within a city that is served by
an open311 API. After running this function, the jurisdiction is available
to other \code{o311_*} functions until the session is terminated or until it
is overwritten.
}
\details{
In theory, several jurisdictions can exist for a single endpoints, e.g.
if a region serves multiple jurisdictions. Similarly, multiple endpoints
can exist for a single jurisdiction, e.g. if a provider has set up both
production and test endpoints for a jurisdictions. Providing both
endpoint and jurisdiction is thus the most safe way to identify an API.

By default, only a handful of endpoints are supported. For a list of
currently supported endpoints, run \code{\link{o311_endpoints}}. You can
add non-default endpoints using \code{\link{o311_add_endpoint}}.
}
\examples{
\dontrun{
# cities are matched using regex
o311_jurisdiction(city = "Cologne")

# passing a jurisdiction is more explicit
o311_jurisdiction(jurisdiction = "stadt-koeln.de")
}

}
\seealso{
\code{\link{o311_requests}}, \code{\link{o311_request}},
\code{\link{o311_services}}
}
