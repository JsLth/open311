[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 open311 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonas Lieth. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lieth J (2024). open311: R interface open311 standard. R package version 0.1.0.9000.","code":"@Manual{,   title = {open311: R interface to the open311 standard},   author = {Jonas Lieth},   year = {2024},   note = {R package version 0.1.0.9000}, }"},{"path":"/index.html","id":"open311","dir":"","previous_headings":"","what":"R interface to the open311 standard","title":"R interface to the open311 standard","text":"open311 R package allows query endpoint uses open311 API standard public service communication. Usually, APIs established alongside web services allow citizens submit public service tickets public spaces. tickets can retrieved using open311 APIs. open311 supports official endpoints currently include services requests.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R interface to the open311 standard","text":"can install development version open311 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"JsLth/open311\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R interface to the open311 standard","text":"following example loads open311, sets jurisdiction retrieves small amount data service tickets Cologne, Germany.","code":"library(open311)  o311_jurisdiction(\"Cologne\") o311_requests() #> Simple feature collection with 50 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 6.833799 ymin: 50.85938 xmax: 7.10085 ymax: 51.0604 #> Geodetic CRS:  WGS 84 #> # A tibble: 50 × 15 #>    service_request_id status service_code service_name               description #>  * <chr>              <chr>  <chr>        <chr>                      <chr>       #>  1 A-173480           open   009          Schrottfahrzeuge/-fahrräd… \"Rondorfer… #>  2 A-173476           open   012          Straßenbaustellen          \"Baustelle… #>  3 A-173472           open   012          Straßenbaustellen          \"Guten Tag… #>  4 A-173470           open   009          Schrottfahrzeuge/-fahrräd… \"Unabgesch… #>  5 A-173455           open   009          Schrottfahrzeuge/-fahrräd… \"Am Rand d… #>  6 A-173438           open   006          Gully verstopft            \"Bachemer … #>  7 A-173430           open   009          Schrottfahrzeuge/-fahrräd… \"Auf der W… #>  8 A-173409           open   009          Schrottfahrzeuge/-fahrräd… \"Räder ste… #>  9 A-173407           open   009          Schrottfahrzeuge/-fahrräd… \"Ohne Kenn… #> 10 A-173390           open   009          Schrottfahrzeuge/-fahrräd… \"Auto steh… #> # ℹ 40 more rows #> # ℹ 10 more variables: agency_responsible <lgl>, service_notice <lgl>, #> #   address_id <lgl>, requested_datetime <chr>, updated_datetime <chr>, #> #   address <chr>, zipcode <lgl>, status_notes <chr>, media_url <chr>, #> #   geometry <POINT [°]>"},{"path":"/reference/o311_discovery.html","id":null,"dir":"Reference","previous_headings":"","what":"API discovery — o311_discovery","title":"API discovery — o311_discovery","text":"Retrieve discovery information mounted endpoint.","code":""},{"path":"/reference/o311_discovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API discovery — o311_discovery","text":"","code":"o311_discovery()"},{"path":"/reference/o311_discovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API discovery — o311_discovery","text":"list containing details given open311 API.","code":""},{"path":"/reference/o311_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Endpoints — o311_add_endpoint","title":"Endpoints — o311_add_endpoint","text":"Modify examine defined open311 endpoints. o311_endpoints() retrieves list endpoints including additional information. o311_add_endpoint adds list define new endpoint can used queries. o311_reset_endpoints restores initial state endpoints list.","code":""},{"path":"/reference/o311_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endpoints — o311_add_endpoint","text":"","code":"o311_add_endpoint(   name,   root,   jurisdiction = NULL,   key = FALSE,   pagination = FALSE,   limit = NULL,   json = TRUE )  o311_reset_endpoints()  o311_endpoints()"},{"path":"/reference/o311_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Endpoints — o311_add_endpoint","text":"name [character] Name endpoint / city. name can arbitrary serves identification [o311_jurisdiction]. root [character] Base URL endpoint sending production-grade requests. root URL commonly points \"georeport/v2/\". jurisdiction [character] Unique identifier jurisdiction. jurisdiction typically defined domain respective city website. optional endpoints serve one jurisdiction. key [logical] API key mandatory? pagination [logical] requests responses paginated? limit [integer] paginated, many requests one page contain? json [logical] JSON responses supported? FALSE, defaults \"XML\" responses. \"XML\" responses harder simplify.","code":""},{"path":"/reference/o311_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Endpoints — o311_add_endpoint","text":"o311_endpoints, dataframe containing relevant information endpoint. o311_add_endpoint, new endpoint, invisibly. o311_reset_endpoints returns NULL invisibly.","code":""},{"path":"/reference/o311_endpoints.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Endpoints — o311_add_endpoint","text":"function uses R_user_dir persistently store custom endpoints data sessions. clean , run o311_reset_endpoints() deletes package-specific user directory defaults back system.file(\"jurisdictions.json\", package = \"open311\").","code":""},{"path":[]},{"path":"/reference/o311_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Endpoints — o311_add_endpoint","text":"","code":"# read default endpoints o311_endpoints() #> # A tibble: 19 × 7 #>    name                          root  jurisdiction key   pagination limit json  #>    <chr>                         <chr> <chr>        <lgl> <lgl>      <int> <lgl> #>  1 Annaberg-Buchholz, Deutschla… http… annberg-buc… FALSE TRUE          50 TRUE  #>  2 Bloomington, IN               http… bloomington… FALSE TRUE        1000 TRUE  #>  3 Bonn, Deutschland             http… bonn.de      FALSE TRUE         100 TRUE  #>  4 Boston, MA                    http… boston.gov   FALSE TRUE          50 TRUE  #>  5 Brookline, MA                 http… brooklinema… FALSE TRUE          50 TRUE  #>  6 Chicaco, IL                   http… cityofchica… FALSE TRUE          50 TRUE  #>  7 Köln / Cologne, Deutschland   http… stadt-koeln… FALSE TRUE          50 TRUE  #>  8 Ottawa, ON                    http… ottawa.ca    FALSE TRUE        1000 TRUE  #>  9 Rostock, Deutschland          http… rostock.de   FALSE FALSE         NA TRUE  #> 10 San Francisco, CA             http… sfgov.org    FALSE TRUE          50 TRUE  #> 11 Siegburg, Deutschland         http… siegburg.de  FALSE TRUE          50 TRUE  #> 12 Turku, FI                     http… turku.fi     FALSE FALSE         NA TRUE  #> 13 Zürich, CH                    http… stadt-zueri… FALSE TRUE         100 TRUE  #> 14 Philadelphia, PA              http… philadelphi… FALSE TRUE          NA TRUE  #> 15 Gilbert, AZ                   http… gilbertaz.g… FALSE TRUE          20 TRUE  #> 16 Schwerin, DEU                 http… schwerin.de  FALSE FALSE         NA TRUE  #> 17 FixMyStreet                   http… fixmystreet  FALSE TRUE        1000 TRUE  #> 18 München, DEU                  http… muenchen.de  FALSE TRUE         100 TRUE  #> 19 Boston, MA                    http… NA           FALSE TRUE          50 TRUE   # add a new endpoint o311_add_endpoint(name = \"test\", root = \"test.org/georeport/v2\")  # read new endpoints o311_endpoints() #> # A tibble: 20 × 7 #>    name                          root  jurisdiction key   pagination limit json  #>    <chr>                         <chr> <chr>        <lgl> <lgl>      <int> <lgl> #>  1 Annaberg-Buchholz, Deutschla… http… annberg-buc… FALSE TRUE          50 TRUE  #>  2 Bloomington, IN               http… bloomington… FALSE TRUE        1000 TRUE  #>  3 Bonn, Deutschland             http… bonn.de      FALSE TRUE         100 TRUE  #>  4 Boston, MA                    http… boston.gov   FALSE TRUE          50 TRUE  #>  5 Brookline, MA                 http… brooklinema… FALSE TRUE          50 TRUE  #>  6 Chicaco, IL                   http… cityofchica… FALSE TRUE          50 TRUE  #>  7 Köln / Cologne, Deutschland   http… stadt-koeln… FALSE TRUE          50 TRUE  #>  8 Ottawa, ON                    http… ottawa.ca    FALSE TRUE        1000 TRUE  #>  9 Rostock, Deutschland          http… rostock.de   FALSE FALSE         NA TRUE  #> 10 San Francisco, CA             http… sfgov.org    FALSE TRUE          50 TRUE  #> 11 Siegburg, Deutschland         http… siegburg.de  FALSE TRUE          50 TRUE  #> 12 Turku, FI                     http… turku.fi     FALSE FALSE         NA TRUE  #> 13 Zürich, CH                    http… stadt-zueri… FALSE TRUE         100 TRUE  #> 14 Philadelphia, PA              http… philadelphi… FALSE TRUE          NA TRUE  #> 15 Gilbert, AZ                   http… gilbertaz.g… FALSE TRUE          20 TRUE  #> 16 Schwerin, DEU                 http… schwerin.de  FALSE FALSE         NA TRUE  #> 17 FixMyStreet                   http… fixmystreet  FALSE TRUE        1000 TRUE  #> 18 München, DEU                  http… muenchen.de  FALSE TRUE         100 TRUE  #> 19 Boston, MA                    http… NA           FALSE TRUE          50 TRUE  #> 20 test                          test… NA           FALSE FALSE         NA TRUE"},{"path":"/reference/o311_jurisdiction.html","id":null,"dir":"Reference","previous_headings":"","what":"Mount a jurisdiction — o311_jurisdiction","title":"Mount a jurisdiction — o311_jurisdiction","text":"Attach open311 jurisdiction active session. jurisdiction describes city jurisdiction within city served open311 API. running function, jurisdiction available o311_* functions session terminated overwritten.","code":""},{"path":"/reference/o311_jurisdiction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mount a jurisdiction — o311_jurisdiction","text":"","code":"o311_jurisdiction(endpoint = NULL, jurisdiction = NULL)"},{"path":"/reference/o311_jurisdiction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mount a jurisdiction — o311_jurisdiction","text":"endpoint [character] Name endpoint runs open311 API. usually city, can provider open311 API. jurisdiction [character] ID jurisdiction served open311 API. jurisdiction ID usually root URL jurisdiction website, e.g. \"sfgov.org\" San Francisco.","code":""},{"path":"/reference/o311_jurisdiction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mount a jurisdiction — o311_jurisdiction","text":"list containing important information given jurisdiction.","code":""},{"path":"/reference/o311_jurisdiction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mount a jurisdiction — o311_jurisdiction","text":"theory, several jurisdictions can exist single endpoints, e.g. region serves multiple jurisdictions. Similarly, multiple endpoints can exist single jurisdiction, e.g. provider set production test endpoints jurisdictions. Providing endpoint jurisdiction thus safe way identify API. default, handful endpoints supported. list currently supported endpoints, run o311_endpoints. can add non-default endpoints using o311_add_endpoint.","code":""},{"path":[]},{"path":"/reference/o311_jurisdiction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mount a jurisdiction — o311_jurisdiction","text":"","code":"if (FALSE) { # cities are matched using regex o311_jurisdiction(city = \"Cologne\")  # passing a jurisdiction is more explicit o311_jurisdiction(jurisdiction = \"stadt-koeln.de\") }"},{"path":"/reference/o311_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query an open311 service — o311_query","title":"Query an open311 service — o311_query","text":"Make generic open311 query. open311 implementations support unique operations included official documentation. function can used access URL paths.","code":""},{"path":"/reference/o311_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query an open311 service — o311_query","text":"","code":"o311_query(path, ..., simplify = TRUE)"},{"path":"/reference/o311_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query an open311 service — o311_query","text":"path Path appendix used access endpoint-specific operations. ... Additional query parameters. simplify Whether simplify output using jsonlite::toJSON(..., simplify = TRUE).","code":""},{"path":"/reference/o311_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query an open311 service — o311_query","text":"parsed query output, either list dataframe.","code":""},{"path":"/reference/o311_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query an open311 service — o311_query","text":"","code":"# example code"},{"path":"/reference/o311_requests.html","id":null,"dir":"Reference","previous_headings":"","what":"Get civic service request data — o311_requests","title":"Get civic service request data — o311_requests","text":"Get civic service request data registered open311 endpoint. o311_request queries single service request ID. o311_requests queries single page service requests. o311_request_all tries iterate pages endpoint return complete dataset service requests.","code":""},{"path":"/reference/o311_requests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get civic service request data — o311_requests","text":"","code":"o311_requests(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   page = NULL,   ... )  o311_request(service_request_id)  o311_request_all(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   ...,   max_pages = Inf )"},{"path":"/reference/o311_requests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get civic service request data — o311_requests","text":"service_code [character] IDs service types queried. Defaults available codes endpoint. list available service codes can retrieved using o311_services. start_date, end_date [POSIXct] Start date end date query results. Must date-time objects. specified, defaults last 90 days. status [character] Status public service ticket. Can one \"open\" \"closed\". NULL, returns types tickets. page [integer] Page response. endpoints paginate responses way limited number tickets returned query. retrieve data, consider using o311_request_all. ... endpoint-specific parameters documented respective endpoint reference. service_request_id [character] Identifier single service request. Request IDs can usually retrieved response o311_requests. max_pages [integer] Number pages searched result returned.","code":""},{"path":"/reference/o311_requests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get civic service request data — o311_requests","text":"o311_request_all applies number checks determine stop searching. First, many endpoints return error last page exceeded. Thus, last page request failed, break. Second, exceeding pagination limit return error, response compared previous response. identical, response discarded previous responses returned. Finally, page exceeds max_pages, responses point returned. open311 leaves space implementations implement request parameters. parameters can provided using dot arguments. arguments validated pre-processed. Date-time objects must formatted according w3c standard. common parameters include: q: Perform text search across requests. update_after/updated_before: Limit request according  request update dates. per_page: Specifiy maximum number requests per page. extensions: Return additional technical information. dot arguments deviate open311 standard, guaranteed available every endpoint might removed without notice.","code":""},{"path":[]},{"path":"/reference/o311_requests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get civic service request data — o311_requests","text":"","code":"# example code"},{"path":"/reference/o311_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Get service list — o311_services","title":"Get service list — o311_services","text":"Get list available services. Services unique endpoint / city thus require attached jurisdiction using o311_jurisdiction.","code":""},{"path":"/reference/o311_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get service list — o311_services","text":"","code":"o311_services()"},{"path":"/reference/o311_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get service list — o311_services","text":"dataframe containing information service. following columns included:","code":""}]
